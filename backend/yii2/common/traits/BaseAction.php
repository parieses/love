<?php

namespace common\traits;

use common\tools\Code;
use common\tools\Common;
use common\tools\Tool;
use Yii;
use yii\rest\Serializer;
use yii\web\Response;

trait BaseAction
{
    public $start = 0;
    private $sourceArray = ['APP', 'PC'];
    public $headers;
    public $noCheckAction = ['site/error', 'site/synopsis', '', 'site'];
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->enableCsrfValidation = false;
        $this->start = Common::getMillisecond();
        $this->headers = Yii::$app->request->headers;
        $current_route = Yii::$app->requestedRoute ;
        $source = in_array($current_route, $this->noCheckAction) ? 'PC' : $this->headers['source'];
        if (!$source) {
            echo json_encode(['code' => Code::getSourceCode(), 'message' => '请检查来源']);
            exit();
        }
        $source = strtoupper($source);
        if (!in_array($source, $this->sourceArray)) {
            echo json_encode(['code' => Code::getSourceCode(), 'message' => '未知来源']);
            exit();
        }
        if (method_exists($this, 'checkToken')) {
            $this->checkToken();
        }
    }

    public function beforeAction($action)
    {
        parent::beforeAction($action); // TODO: Change the autogenerated stub

        //处理响应格式
        Yii::$app->response->on(
            Response::EVENT_BEFORE_SEND,
            function ($event) {
                $response = $event->sender;
                $response->format = Response::FORMAT_JSON;
                if ($response->statusCode !== 500) {
                    if (!isset($response->data['code'])) {
                        $message = '获取成功';
                        if (isset($response->data['message'])) {
                            $message = $response->data['message'];
                        } elseif (!$response->isSuccessful && isset($response->data[0]['message'])) {
                            $message = $response->data[0]['message'];
                        }
                        $response->data = [
                            'message' => $message,
                            'code' => $response->isSuccessful ? $response->data['code'] ?? Code::getSuccessCode() : Code::getErrorCode(),
                            'data' => $response->data ?: [],
                            'duration' => Common::getMillisecond() - $this->start
                        ];
                    } else {
                        $response->data['duration'] = Common::getMillisecond() - $this->start;
                    }
                } else {
//                    $response->data = [
//                        'message' => '服务器异常',
//                        'code' => 500,
//                        'data' => $response->data,
//                        'duration' => Common::getMillisecond() - $this->start
//                    ];
                }
            }
        );
        return $action;
    }
}